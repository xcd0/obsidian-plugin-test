name: Build and Publish to GitHub Pages

on:
  push:
    branches: [main, master]
    paths:
      - 'memolog/**'

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout vault repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Clone publish repository
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        run: |
          git clone https://${PUBLISH_TOKEN}@github.com/xcd0/public-memo.git publish-repo
          cd publish-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup Quartz in publish repository
        working-directory: publish-repo
        run: |
          # Quartzがセットアップ済みかチェック。
          if [ ! -f "package.json" ] || ! grep -q "quartz" package.json; then
            echo "Quartz is not setup. Setting up now..."

            # Quartzリポジトリをクローン。
            git clone https://github.com/jackyzha0/quartz.git quartz-temp

            # 必要なファイルをコピー。
            cp -r quartz-temp/quartz .
            cp quartz-temp/package.json .
            cp quartz-temp/package-lock.json .
            cp quartz-temp/tsconfig.json .
            cp quartz-temp/quartz.config.ts .
            cp quartz-temp/quartz.layout.ts .

            # contentディレクトリを作成。
            mkdir -p content

            # クローンしたディレクトリを削除。
            rm -rf quartz-temp

            # 依存関係をインストール。
            npm install

            echo "Quartz setup completed!"
            git add .
            git commit -m "feat: Auto-setup Quartz" || echo "No changes to commit"
          else
            echo "Quartz is already setup."
          fi

      - name: Clear and copy Markdown files to content directory
        run: |
          # content/ディレクトリをクリア（.gitは保持）。
          find publish-repo/content -mindepth 1 ! -path '*/\.git/*' -delete 2>/dev/null || true

          # 公開対象ディレクトリのMarkdownファイルをコピー。
          mkdir -p publish-repo/content
          if [ -d "memolog" ]; then
            cp -r memolog/* publish-repo/content/ || true
          fi

          # index.mdが存在しない場合は自動生成。
          if [ ! -f "publish-repo/content/index.md" ]; then
            echo "Creating default index.md..."
            echo "---" > publish-repo/content/index.md
            echo "title: Home" >> publish-repo/content/index.md
            echo "---" >> publish-repo/content/index.md
            echo "" >> publish-repo/content/index.md
            echo "# Welcome" >> publish-repo/content/index.md
            echo "" >> publish-repo/content/index.md
            echo "This is my published notes." >> publish-repo/content/index.md
            echo "" >> publish-repo/content/index.md
            echo "## Recent Notes" >> publish-repo/content/index.md
            echo "" >> publish-repo/content/index.md
            # 最近のMarkdownファイルをリストアップ（最大10件）。
            find publish-repo/content -name "*.md" ! -name "index.md" -type f -printf "%T@ %p
" 2>/dev/null |               sort -rn | head -10 | cut -d' ' -f2- |               sed 's|publish-repo/content/||' | sed 's|.md$||' |               sed 's|^|- [[|' | sed 's|$|]]|' >> publish-repo/content/index.md || true
            echo "Default index.md created successfully"
          fi

          # ファイル数を確認。
          file_count=$(find publish-repo/content -name "*.md" | wc -l)
          echo "Copied $file_count Markdown files"

      - name: Build Quartz
        working-directory: publish-repo
        run: |
          # Node modules がない場合はインストール。
          if [ ! -d "node_modules" ]; then
            npm install
          fi

          # Quartzでビルド。
          npx quartz build

          echo "Quartz build completed!"
          ls -la public/

      - name: Move public contents to root
        working-directory: publish-repo
        run: |
          if [ -d "public" ]; then
            echo "Moving public/ contents to repository root..."

            # public/ の中身をルートにコピー。
            cp -r public/* .
            cp -r public/.[!.]* . 2>/dev/null || true

            # public/ ディレクトリを削除。
            rm -rf public/

            echo "Deployment prepared!"
            echo "Files in repository root:"
            ls -la
          else
            echo "Error: public/ directory not found"
            exit 1
          fi

      - name: Push built site to publish repository
        working-directory: publish-repo
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        run: |
          # PUBLISH_TOKENの確認。
          if [ -z "${PUBLISH_TOKEN}" ]; then
            echo "Error: PUBLISH_TOKEN is not set"
            echo "Please set PUBLISH_TOKEN in repository secrets"
            exit 1
          fi

          git add .

          # 変更があればコミット。
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S')
            git commit -m "docs: Update published site (${TIMESTAMP})"
            git push https://${PUBLISH_TOKEN}@github.com/xcd0/public-memo.git main
            echo "Changes pushed to publish repository"
          fi
